// Generated by CoffeeScript 1.6.3
(function() {
  var app, express, log, require_auth, _thought_cur, _thoughts, _users;

  express = require('express');

  app = express();

  require_auth = function(req, res, next) {
    if (!req.session.userid) {
      res.send(401);
    }
    return next();
  };

  log = function(req, res, next) {
    console.log(req.path);
    return next();
  };

  app.configure(function() {
    app.use(express.bodyParser());
    app.use(express.cookieParser());
    app.use(express.cookieSession({
      secret: 'deadbeef'
    }));
    app.all('/api/*', require_auth);
    app.all('*', log);
    return app.use(express["static"]("" + __dirname + "/public"));
  });

  _users = [];

  _thoughts = [];

  _thought_cur = 0;

  app.get('/', function(req, res) {
    return res.sendfile('public/index3.html');
  });

  app.get('/api/thoughts', function(req, res) {
    var thoughts, userid, _ref;
    userid = req.session.userid;
    thoughts = ((_ref = _users[userid]) != null ? _ref.thoughts : void 0) || [];
    return res.json(thoughts.map(function(id) {
      return _thoughts[id];
    }));
  });

  app.get('/api/allthoughts', function(req, res) {
    var thoughts, userid, _ref;
    userid = req.session.userid;
    thoughts = ((_ref = _users[userid]) != null ? _ref.other_thoughts : void 0) || [];
    return res.json(thoughts.map(function(id) {
      return _thoughts[id];
    }));
  });

  app.get('/api/allfeelings', function(req, res) {
    return res.json(_thoughts.map(function(data) {
      return data;
    }));
  });

  app.post('/api/thoughts', function(req, res) {
    var i, other_thoughts, thought_id, thoughts, userid, _i, _ref;
    userid = req.session.userid;
    thought_id = _thought_cur++;
    _thoughts[thought_id] = {
      time: new Date(),
      word: req.body.word,
      feeltxt: req.body.feeltxt,
      thought: req.body.thought,
      user: userid
    };
    _users[userid] || (_users[userid] = []);
    thoughts = _users[userid].thoughts || [];
    thoughts.push(thought_id);
    _users[userid]['thoughts'] = thoughts;
    other_thoughts = _users[userid].other_thoughts || [];
    for (i = _i = _ref = _thoughts.length - 1; _ref <= 0 ? _i <= 0 : _i >= 0; i = _ref <= 0 ? ++_i : --_i) {
      if (_thoughts[i] && _thoughts[i].user !== userid) {
        other_thoughts.push(i);
        break;
      }
    }
    _users[userid].other_thoughts = other_thoughts;
    console.log(other_thoughts);
    return res.json('ok');
  });

  app.post('/login', function(req, res) {
    req.session.userid = req.body.userid;
    return res.json('ok');
  });

  app.get('/api/logout', function(req, res) {
    delete req.session.userid;
    return res.json('ok');
  });

  app.listen('3333');

  console.log('listening on 3333');

}).call(this);
