// Generated by CoffeeScript 1.6.3
(function() {
  var app, between, express, includes, log, month, pop3_feelings, remove, require_auth, _comment_cur, _comments, _daily_words, _feeling_cur, _feelings, _float_feeling_cur, _float_feeling_queue, _float_feelings, _users, _words;

  express = require('express');

  app = express();

  require_auth = function(req, res, next) {
    console.log("auth: " + req.session.user);
    if (!req.session.user) {
      res.send(401);
    }
    return next();
  };

  log = function(req, res, next) {
    console.log(req.path);
    return next();
  };

  app.configure(function() {
    app.use(express.bodyParser());
    app.use(express.cookieParser());
    app.use(express.cookieSession({
      secret: 'deadbeef'
    }));
    app.all('/auth/*', require_auth);
    app.all('*', log);
    return app.use(express["static"]("" + __dirname + "/public"));
  });

  app.get('/', function(req, res) {
    return res.sendfile('public/index.html');
  });

  app.get('/sessions', function(req, res) {
    return res.json({
      user: req.session.user || false
    });
  });

  app.post('/sessions', function(req, res) {
    req.session.user = req.body.user_id;
    return res.json(true);
  });

  app.del('/sessions', function(req, res) {
    if (!req.session.user) {
      res.send(401);
    }
    delete req.session.user;
    return res.json(true);
  });

  app.post('/users', function(req, res) {
    return res.json(true);
  });

  _users = {};

  _feelings = {};

  _feeling_cur = 0;

  _comments = {};

  _comment_cur = 0;

  _daily_words = {};

  _float_feelings = {};

  _float_feeling_cur = 0;

  _float_feeling_queue = [];

  _words = {
    'w00': {
      desc: '외롭다',
      color: '#c6aae2'
    },
    'w01': {
      desc: '쓸쓸하다',
      color: '#ffc6e2'
    },
    'w02': {
      desc: '기쁘다',
      color: '#aaaae2'
    },
    'w03': {
      desc: '기운차다',
      color: '#8daae2'
    },
    'w04': {
      desc: '만족스럽다',
      color: '#ffff8d'
    },
    'w05': {
      desc: '삶이힘들다',
      color: '#336699'
    },
    'w06': {
      desc: '두렵다',
      color: '#ffc6c6'
    },
    'w07': {
      desc: '초조하다',
      color: '#c6ffff'
    }
  };

  app.get('/auth/info', function(req, res) {
    return res.json({
      words: _words,
      live_words: [
        {
          'w03': 10
        }, {
          'w04': 3
        }, {
          'w07': 2
        }, {
          'w01': 8
        }
      ],
      available_feels: 10,
      simailar_users: [
        {
          user_id: 'uuuuu',
          similarity: 1.7,
          word_id: 'w02'
        }, {
          user_id: 'ppp',
          similarity: 2.7,
          word_id: 'w03'
        }, {
          user_id: 'asdfef',
          similarity: 3.7,
          word_id: 'w04'
        }, {
          user_id: 'f73ur',
          similarity: 2.1,
          word_id: 'w06'
        }, {
          user_id: 'myidififi',
          similarity: 4.7,
          word_id: 'w02'
        }
      ]
    });
  });

  app.get('/auth/my', function(req, res) {
    var mon, n, user;
    user = req.session.user;
    mon = req.params.skip || 0;
    n = req.params.n || 3;
    return res.json([
      {
        id: 0,
        time: 0,
        user_id: 'uuuuu',
        word_id: 'w03',
        content: 'aefe aefef fa',
        comments: [
          {
            type: 'heart',
            content: '블블블',
            user_id: 'asdf',
            time: 0,
            liked: 1
          }, {
            type: 'comment',
            content: '블블블asdf',
            user_id: 'qwer',
            time: 0,
            liked: 0
          }
        ]
      }
    ]);
  });

  app.get('/auth/ur', function(req, res) {
    var mon, n, user;
    user = req.session.user;
    mon = req.params.skip || 0;
    n = req.params.n || 3;
    return res.json([
      {
        id: 1,
        time: 0,
        user_id: 'f23rf',
        word_id: 'w03',
        content: '블라블라블라',
        comments: [
          {
            id: 0,
            type: 'heart',
            content: '블블블',
            user_id: 'asdf',
            time: 0,
            liked: 1
          }
        ]
      }
    ]);
  });

  app.get('/auth/ur/news', function(req, res) {
    var mon, n, user;
    user = req.session.user;
    mon = req.params.skip || 0;
    n = req.params.n || 3;
    return res.json([
      {
        id: 2,
        time: 0,
        user_id: 'qwer',
        word_id: 'w03',
        content: '블라블라블라',
        comments: []
      }
    ]);
  });

  app.post('/auth/feels/:id/comments', function(req, res) {
    var content, id, type, user;
    id = req.params.id;
    user = req.session.user;
    type = req.body.type;
    content = req.body.content;
    return req.json(true);
  });

  app.put('/auth/feels/:id/comments/:comment_id', function(req, res) {
    var comment_id, id, likeit, user;
    id = req.params.id;
    comment_id = req.params.comment_id;
    user = req.session.user;
    likeit = req.body.likeit;
    return req.json(true);
  });

  remove = function(arr, x) {
    return arr.filter(function(a) {
      return a !== x;
    });
  };

  between = function(x, min, max) {
    return x >= min && x <= max;
  };

  includes = function(arr, x) {
    var a, _i, _len;
    for (_i = 0, _len = arr.length; _i < _len; _i++) {
      a = arr[_i];
      if (a === x) {
        return true;
      }
    }
    return false;
  };

  month = function(mon, gap) {
    return ((mon - 1) + 12 + gap) % 12 + 1;
  };

  pop3_feelings = function() {
    var id, res, _i, _len;
    res = [];
    for (_i = 0, _len = _float_feeling_queue.length; _i < _len; _i++) {
      id = _float_feeling_queue[_i];
      if (res.length === 3) {
        break;
      }
      if (!includes(res, id)) {
        res.push(id);
      }
    }
    return res;
  };

  /* OLD ROUTES*/


  app.listen('3333');

  console.log('listening on 3333');

}).call(this);
