// Generated by CoffeeScript 1.6.3
/* $ ->
  class Item extends Backbone.Model
    defaults:
      part1: 'Hello'
      part2: 'Backbone'

  class List extends Backbone.Collection
    model: Item

  class ItemView extends Backbone.View
    tagName: 'li'
    initialize: -> _.bindAll @, 'render'
    render: -> 
      @$el.html "<span>#{@model.get 'part1'} #{@model.get 'part2'}!</span>"
      @

  class ListView extends Backbone.View
    el: $ 'body'

    initialize: ->
      _.bindAll @, 'render'
      @coll = new List
      @coll.bind 'add', @appendItem
      @counter = 0
      @render()

    render: ->
      @$el.append '<button>Add</button>'
      @$el.append '<ul></ul>'

    addItem: ->
      item = new Item
      item.set 'part2', "#{item.get 'part2'} #{@counter++}"
      @coll.add item

    appendItem: (item) ->
      v = new ItemView model: item
      $('ul').append v.render().el

    events: 'click button': 'addItem'

  list_view = new ListView
*/

var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

$(function() {
  var HeaderView, RRouter, Wine, WineView, Winelist, WinelistView, _ref, _ref1, _ref2, _ref3, _ref4, _ref5;
  Wine = (function(_super) {
    __extends(Wine, _super);

    function Wine() {
      _ref = Wine.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    return Wine;

  })(Backbone.Model);
  Winelist = (function(_super) {
    __extends(Winelist, _super);

    function Winelist() {
      _ref1 = Winelist.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    return Winelist;

  })(Backbone.Collection);
  WineView = (function(_super) {
    __extends(WineView, _super);

    function WineView() {
      _ref2 = WineView.__super__.constructor.apply(this, arguments);
      return _ref2;
    }

    return WineView;

  })(Backbone.View);
  WinelistView = (function(_super) {
    __extends(WinelistView, _super);

    function WinelistView() {
      _ref3 = WinelistView.__super__.constructor.apply(this, arguments);
      return _ref3;
    }

    WinelistView.prototype.el = 'body';

    WinelistView.prototype.initialize = function() {
      return this.render();
    };

    WinelistView.prototype.render = function() {
      this.$el.append('<ul><li>first</li></ul>');
      return this;
    };

    return WinelistView;

  })(Backbone.View);
  HeaderView = (function(_super) {
    __extends(HeaderView, _super);

    function HeaderView() {
      _ref4 = HeaderView.__super__.constructor.apply(this, arguments);
      return _ref4;
    }

    HeaderView.prototype.template = _.template($('#tpl-header').html());

    HeaderView.prototype.initialize = function() {
      return this.render();
    };

    HeaderView.prototype.render = function() {
      this.$el.html(this.template());
      return this;
    };

    return HeaderView;

  })(Backbone.View);
  RRouter = (function(_super) {
    __extends(RRouter, _super);

    function RRouter() {
      _ref5 = RRouter.__super__.constructor.apply(this, arguments);
      return _ref5;
    }

    RRouter.prototype.initialize = function() {
      return $('#header').html(new HeaderView().render().el);
    };

    return RRouter;

  })(Backbone.Router);
  return new RRouter;
});
